trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: chatEVT-secrets

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    cd frontend
    npm install
    npm run build
  displayName: 'Build Frontend'

- task: Docker@2
  inputs:
    command: 'build'
    repository: 'chatevt-frontend'
    dockerfile: '$(Build.SourcesDirectory)/frontend/Dockerfile'
    tags: 'latest'
  displayName: 'Build Frontend Docker Image'

- task: Docker@2
  inputs:
    command: 'build'
    repository: 'chatevt-backend'
    dockerfile: '$(Build.SourcesDirectory)/backend/Dockerfile'
    tags: 'latest'
  displayName: 'Build Backend Docker Image'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'chatEVT-service-connection' # Ex.: chatEVT-service-connection
    appType: 'webAppContainer'
    WebAppName: 'chatEVT'
    DockerNamespace: '' # vazio por conta do uso de imagens locais
    DockerRepository: '' # vazio
    DockerImageTag: 'latest'
    MultiContainerConfigFile: '$(Build.SourcesDirectory)/docker-compose.yml' # Caminho para o docker-compose.yml
  displayName: 'Deploy to Azure App Service with Docker Compose'